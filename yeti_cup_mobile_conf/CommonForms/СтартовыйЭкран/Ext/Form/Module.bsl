/////////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
/////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	МассивСтраниц.Добавить("ЭкранСтартовый");
	МассивСтраниц.Добавить("ЭкранАвторизации");
	МассивСтраниц.Добавить("ЭкранМероприятия");
	МассивСтраниц.Добавить("ЭкранПрофиля");
	МассивСтраниц.Добавить("ЭкранДостижений");
	МассивСтраниц.Добавить("ЭкранМодератора");
	МассивСтраниц.Добавить("ЭкранПоиска");
	МассивСтраниц.Добавить("ПанельПерехода");
	
	Попытка
		Прокси		= МодульРаботыСВебСервисом.CоздатьПрокси();
		Результат	= Прокси.champlist(ТекущаяДата());
		
		// в результате у нас xdto
		Для Индех = 0 по Результат.champ.Количество() - 1 Цикл
			
			Обжект	= Результат.champ[Индех];
			
			Если Не (Обжект.code = "" И Обжект.name = "") Тогда
				
				Мер	= Мероприятия.Добавить();
				
				Мер.Код				= Обжект.code;
				Мер.Наименование	= Обжект.name;
				
			КонецЕсли;
			
		КонецЦикла;
		
		// здесь мы заполним текущее мероприятие
		ТекущееМероприятие	= Константы.ТекушееМероприятиеНаименование.Получить();
		
		// инициализируем счетчик
		МассивСтрок	= Мероприятия.НайтиСтроки(Новый Структура("Наименование", ТекущееМероприятие));
		
		Если Не МассивСтрок.Количество() = 0 Тогда
			
			ИндехМ	= Мероприятия.Индекс(МассивСтрок[0]);
			
		Иначе
			
			ИндехМ	= Неопределено;
			
			// и текущее мероприятие очистим
			// бо неактуальное
			ТекущееМероприятие = "";
			
		КонецЕсли;
		
	Исключение
		Результат	= Неопределено;
		Сообщить("Не удалось получить список мероприятий");
	КонецПопытки;
	
	// инициализация прочих реквизитов
	ЭтоТелефон				= 1;
	Элементы.Логин.Маска	= "+7(999) 999-99-99";
	ГлазОткрыт				= Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	АктивнаяСтраница("ЭкранСтартовый");
	
КонецПроцедуры

&НаКлиенте
Процедура АктивнаяСтраница(ИмяСтраницы)
	
	// видимость
	Для каждого Элем из МассивСтраниц Цикл
		
		Элементы[Элем.Значение].Видимость = (Элем.Значение = ИмяСтраницы);
		
	КонецЦикла;
	
	// специфические действия на страницах
	Если ИмяСтраницы = "ЭкранСтартовый" Тогда
		
		// текущий элемент
		ЭтаФорма.ТекущийЭлемент	= Элементы.ПерейтиКСобытию;
		
		// подключить обработчик ожидания
		ПодключитьОбработчикОжидания("СдвигВправо", 30);
		
	ИначеЕсли ИмяСтраницы = "ЭкранАвторизации" Тогда
		
		// текущий элемент
		ЭтаФорма.ТекущийЭлемент	= Элементы.Логин;
		
		// отключить обработчик ожидания
		ОтключитьОбработчикОжидания("СдвигВправо");
		
		// получим сохраненные данные авторизации
		ДанныеАвторизации		= ПолучитьДанныеАвторизации();
		
		Если Не ПустаяСтрока(ДанныеАвторизации.Логин) Тогда
			
			Логин				= ДанныеАвторизации.Логин;
			Пароль				= ДанныеАвторизации.Пароль;
			ЭтоТелефон			= ДанныеАвторизации.ЭтоТелефон;
			
			Вход(Команды.Найти("Вход"));
			
		Иначе
				
			// подключить обработчик ожидания
			ПодключитьОбработчикОжидания("ВозвратНаСтартовыйЭкран", 30, Истина);
			
		КонецЕсли;
		
	ИначеЕсли ИмяСтраницы = "ЭкранМероприятия" Тогда
		
		// надо получить список событий по текущему мероприятию
		ПолучитьСписокСобытий();
		
		// промежуток
		Если СобытияМероприятия.Количество() < 5 Тогда
			Элементы.Промежуток5.Видимость	= Истина;
			Элементы.Промежуток5.Высота 	= (5 - СобытияМероприятия.Количество()) * 2 + 1;
		Иначе
			Элементы.Промежуток5.Видимость	= Ложь;
		КонецЕсли;
		
		// покажем панель перехода
		Элементы.ПанельПерехода.Видимость	= Истина;
		
	ИначеЕсли ИмяСтраницы = "ЭкранПрофиля" Тогда
		
		// получим профиль пользователя
		ПолучитьПрофильПользователя();
		
		// покажем панель перехода
		Элементы.ПанельПерехода.Видимость	= Истина;
		
	ИначеЕсли ИмяСтраницы = "ЭкранДостижений" Тогда
		
		// надо получить список достижений
		ПолучитьСписокДостижений();
		
		// промежуток
		Если ДостиженияПрофиля.Количество() < 5 Тогда
			Элементы.Промежуток6.Видимость	= Истина;
			Элементы.Промежуток6.Высота 	= (6 - ДостиженияПрофиля.Количество()) * 2 + 1;
		Иначе
			Элементы.Промежуток6.Видимость	= Ложь;
		КонецЕсли;
		
		// покажем панель перехода
		Элементы.ПанельПерехода.Видимость	= Истина;
		
	ИначеЕсли ИмяСтраницы = "ЭкранМодератора" Тогда
		
		Сканировать(Команды.Найти("Сканировать"));
		
	ИначеЕсли ИмяСтраницы = "ЭкранПоиска" Тогда
		
		РезультатыПоиска.Очистить();
		
	Иначе
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СТАРТОВОГО ЭКРАНА
/////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура Влево(Команда)
	
	Если (ИндехМ = Неопределено) Или (ИндехМ = 0) Тогда
		
		ИндехМ	= Мероприятия.Количество() - 1;
		
	Иначе
		
		ИндехМ	= ИндехМ - 1;
		
	КонецЕсли;
	
	ТекущееМероприятие	= Мероприятия[ИндехМ].Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура Вправо(Команда)
	
	Если (ИндехМ = Неопределено) Или (ИндехМ = (Мероприятия.Количество() - 1)) Тогда
		
		ИндехМ	= 0;
		
	Иначе
		
		ИндехМ	= ИндехМ + 1;
		
	КонецЕсли;
	
	ТекущееМероприятие	= Мероприятия[ИндехМ].Наименование;
	
КонецПроцедуры

&НаКлиенте
Процедура СдвигВправо()
	
	Вправо(Команды.Найти("Вправо"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекущееМероприятие(Код, Наименование)
	
	Константы.ТекушееМероприятиеКод.Установить(Код);
	Константы.ТекушееМероприятиеНаименование.Установить(Наименование);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКСобытию(Команда)
	
	Если Не ИндехМ = Неопределено Тогда
		
		ТекМероприятие	= Мероприятия[ИндехМ];
		
		УстановитьТекущееМероприятие(ТекМероприятие.Код, ТекМероприятие.Наименование);
		
		АктивнаяСтраница("ЭкранАвторизации");
		
	КонецЕсли;
	
	//Сообщить("Under construction");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущееМероприятиеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка	= Ложь;
	
	ПерейтиКСобытию(Команды.Найти("ПерейтиКСобытию"));
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЭКРАНА АВТОРИЗАЦИИ
/////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Функция ПолучитьДанныеАвторизации()
	
	Результат	= Новый Структура;
	Результат.Вставить("Логин",			Константы.UserLogin.Получить());
	Результат.Вставить("Пароль",		Константы.UserPassword.Получить());
	Результат.Вставить("ЭтоТелефон",	Константы.ЭтоТелефон.Получить());
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЭтоТелефонПриИзменении(Элемент)

	Если ЭтоТелефон = 1 Тогда
		Элементы.Логин.Маска	= "+7(999) 999-99-99";
	Иначе
		Элементы.Логин.Маска	= "";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЛогинПриИзменении(Элемент)

	КонтрольПройден	= Истина;
	
	Если ЭтоТелефон = 1 Тогда
		Если Не СтрДлина(СокрЛП(Логин)) = СтрДлина(Элементы.Логин.Маска) Тогда
			Сообщить("Телефон введен неверно!");
			КонтрольПройден	= Ложь;
		КонецЕсли;
	Иначе
		// проверим на наличие @ и точки
		Если (СтрНайти(Логин, "@") = 0) ИЛИ (СтрНайти(Логин, ".") = 0) Тогда
			Сообщить("Email введен неверно!");
			КонтрольПройден	= Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Не КонтрольПройден Тогда
		Логин	= "";
		ЭтаФорма.ТекущийЭлемент	= Элементы.Логин;
	Иначе
		ЭтаФорма.ТекущийЭлемент	= Элементы.Пароль;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)

	ЭтаФорма.ТекущийЭлемент	= Элементы.Вход;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияГлазНажатие(Элемент)
	
	ГлазОткрыт	= Не ГлазОткрыт;

	Элементы.Пароль.РежимПароля	= Не ГлазОткрыт;
	Элементы.ДекорацияГлаз.Картинка	= ?(ГлазОткрыт, БиблиотекаКартинок.ГлазОткрытый, БиблиотекаКартинок.ГлазЗакрытый);
	
КонецПроцедуры

&НаСервере
Функция ВходНаСервере()
	
	Попытка
		
		ЛогинДП		= ?(ЭтоТелефон = 1, ОбщегоНазначения.ПреобразоватьТелефонДляПоиска(Логин), Логин);
		
		Прокси		= МодульРаботыСВебСервисом.CоздатьПрокси();
		Результат	= Прокси.auth(ЛогинДП, Пароль, ТекущееМероприятие);
		
		// в результате у нас xdto
		Если Результат.result Тогда
			
			Константы.UserCode.Установить(Результат.user.code);
			Константы.UserName.Установить(Результат.user.name);
			Константы.UserLogin.Установить(Логин);
			Константы.UserPassword.Установить(Пароль);
			Константы.ЭтоТелефон.Установить(ЭтоТелефон);
			
			РольУчастника	= Перечисления.РолиНаЧемпионате.Получить(Результат.role);
			Константы.РольУчастника.Установить(РольУчастника);
			
		Иначе
			
			Сообщить("Неправильный логин или пароль!");
			
		КонецЕсли;
		
		Возврат Результат.result;
		
	Исключение
		Результат	= Неопределено;
		Сообщить("Не удалось провести аутентификацию");
	КонецПопытки;
	
	Возврат Ложь;

КонецФункции

&НаКлиенте
Процедура Вход(Команда)
	
	Если ВходНаСервере() Тогда
		
		Если ЭтоУчастник() Тогда
			АктивнаяСтраница("ЭкранМероприятия");
		ИначеЕсли ЭтоЭксперт() Тогда
			АктивнаяСтраница("ЭкранПоиска");
		ИначеЕсли ЭтоМодератор() Тогда
			АктивнаяСтраница("ЭкранМодератора");
		Иначе
			АктивнаяСтраница("ЭкранМероприятия");
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ЭтоУчастник()
	
	Возврат РольУчастника = Перечисления.РолиНаЧемпионате.Участник;
	
КонецФункции

&НаСервере
Функция ЭтоЭксперт()
	
	Возврат РольУчастника = Перечисления.РолиНаЧемпионате.Эксперт;
	
КонецФункции

&НаСервере
Функция ЭтоМодератор()
	
	Возврат РольУчастника = Перечисления.РолиНаЧемпионате.Модератор;
	
КонецФункции

&НаКлиенте
Процедура ВозвратНаСтартовыйЭкран()
	
	АктивнаяСтраница("ЭкранСтартовый");
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЭКРАНА МЕРОПРИЯТИЯ
/////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПолучитьСписокСобытий()
	
	Попытка
		
		СобытияМероприятия.Очистить();
		
		Прокси		= МодульРаботыСВебСервисом.CоздатьПрокси();
		Результат	= Прокси.timelines(ТекущееМероприятие);
		
		// в результате у нас xdto
		Для Индех = 0 по Результат.timeline.Количество() - 1 Цикл
			
			Обжект	= Результат.timeline[Индех];
			
			Если Не (Обжект.code = "" И Обжект.name = "") Тогда
				
				Соб	= СобытияМероприятия.Добавить();
				
				Соб.Код				= Обжект.code;
				Соб.НазваниеСобытия	= Обжект.name;
				Соб.ОписаниеСобытия	= Обжект.description;
				Соб.ОписаниеСобытияПолное	= Обжект.description;
				ДанныеКартинки		= Base64Значение(Обжект.picture);
				Соб.Картинка		= ПоместитьВоВременноеХранилище(ДанныеКартинки);
				
			КонецЕсли;
			
		КонецЦикла;
		
	Исключение
		Результат	= Неопределено;
		Сообщить("Не удалось получить список событий");
	КонецПопытки;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЭКРАНА ПРОФИЛЯ
/////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПолучитьПрофильПользователя()
	
	Попытка
		
		Прокси		= МодульРаботыСВебСервисом.CоздатьПрокси();
		Результат	= Прокси.profile(Константы.UserCode.Получить(), Константы.UserName.Получить());
		
		ПрофильДата		= Формат(Результат.birthday, "ДФ='dd MMMM yyyy'");
		ПрофильМесто	= Результат.location;
		ПрофильПочта	= Результат.email;
		ПрофильТелефон	= Результат.phone;
		ПрофильФИО		= СокрЛП(Результат.last_name) + " " +
						СокрЛП(Результат.fitst_name) + " " +
						СокрЛП(Результат.second_name);
		ДанныеКартинки	= Base64Значение(Результат.photo);
		ПрофильФото		= ПоместитьВоВременноеХранилище(ДанныеКартинки);
		
	Исключение
		Результат	= Неопределено;
		Сообщить("Не удалось получить профиль пользователя");
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ПрофильВыходНаСервере()
	
	// чистим запомненное
	Константы.UserCode.Установить("");
	Константы.UserName.Установить("");
	Константы.UserLogin.Установить("");
	Константы.UserPassword.Установить("");
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофильВыходНажатие(Элемент)

	ПрофильВыходНаСервере();
	
	АктивнаяСтраница("ЭкранСтартовый");

КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЭКРАНА ДОСТИЖЕНИЙ
/////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПолучитьСписокДостижений()
	
	Попытка
		
		ДостиженияПрофиля.Очистить();
		
		АдресЙети	= ПоместитьВоВременноеХранилище(БиблиотекаКартинок.WhiteYeti);
		
		Прокси		= МодульРаботыСВебСервисом.CоздатьПрокси();
		Результат	= Прокси.historys(Константы.UserCode.Получить(), Константы.UserName.Получить());
		
		// в результате у нас xdto
		Для Индех = 0 по Результат.history.Количество() - 1 Цикл
			
			Обжект	= Результат.history[Индех];
			
			Если Не (Обжект.champ.code = "" И Обжект.champ.name = "") Тогда
				
				Дост	= ДостиженияПрофиля.Добавить();
				
				Дост.НазваниеЧемпионата	= Обжект.champ.name;
				Дост.ДатаЧемпионата		= Обжект.champdate;
				Дост.РольНаЧемпионате	= Обжект.role;
				Дост.КартинкаЙети		= АдресЙети;
				Дост.Место				= Обжект.result;				
				
			КонецЕсли;
			
		КонецЦикла;
		
	Исключение
		Результат	= Неопределено;
		Сообщить("Не удалось получить список достижений");
	КонецПопытки;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПАНЕЛИ ПЕРЕХОДА
/////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура Профиль(Команда)
	
	АктивнаяСтраница("ЭкранПрофиля");
	
КонецПроцедуры

&НаКлиенте
Процедура События(Команда)
	
	АктивнаяСтраница("ЭкранМероприятия");
	
КонецПроцедуры

&НаКлиенте
Процедура Достижения(Команда)
	
	АктивнаяСтраница("ЭкранДостижений");
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЭКРАНА МОДЕРАТОРА
/////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура Сканировать(Команда)

	#Если МобильноеПриложениеКлиент Тогда

	Если СредстваМультимедиа.ПоддерживаетсяСканированиеШтрихКодов() Тогда
		ОбработчикСканирования = Новый ОписаниеОповещения("ОбработкаРаспознанногоШтрихкода", ЭтаФорма);
		СредстваМультимедиа.ПоказатьСканированиеШтрихКодов("Сканируйте", ОбработчикСканирования,,ТипШтрихКода.Двухмерный);
	Иначе
		Сообщить("Не поддерживается сканирование штрихкодов!");
	КонецЕсли;

	#КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРаспознанногоШтрихкода(Штрихкод, Результат, Сообщение, ДопПараметр) Экспорт
	
	//Сообщить(ТипЗнч(Результат));
	//Сообщить(Штрихкод);
	
	Если Результат Тогда
		Сообщение	= ОтправитьQRКодНаСервере(Штрихкод);
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервере
Функция ОтправитьQRКодНаСервере(Штрихкод)

	Попытка
		
		Прокси			= МодульРаботыСВебСервисом.CоздатьПрокси();
		Результат		= Прокси.checkqr(Штрихкод, ТекущееМероприятие);
		
		ПрофильДата		= Формат(Результат.birthday, "ДФ='dd MMMM yyyy'");
		ПрофильМесто	= Результат.location;
		ПрофильПочта	= Результат.email;
		ПрофильТелефон	= Результат.phone;
		ПрофильФИО		= СокрЛП(Результат.last_name) + " " +
						СокрЛП(Результат.fitst_name) + " " +
						СокрЛП(Результат.second_name);
		ДанныеКартинки	= Base64Значение(Результат.photo);
		ПрофильФото		= ПоместитьВоВременноеХранилище(ДанныеКартинки);
		
		ПрофильРоль		= Перечисления.РолиНаЧемпионате.Получить(Результат.role);
		
		Возврат "ОК";
		
	Исключение
		
		Результат	= Неопределено;
		
	КонецПопытки;
	
	Возврат "Профиль не найден";

КонецФункции

/////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ЭКРАНА ПОИСКА
/////////////////////////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПоискНаСервере()
	
	Попытка
		
		РезультатыПоиска.Очистить();
		
		Прокси			= МодульРаботыСВебСервисом.CоздатьПрокси();
		Результат		= Прокси.search(ПолеПоиска, ТекущееМероприятие);
	
		// в результате у нас xdto
		Для Индех = 0 по Результат.profile.Количество() - 1 Цикл
			
			Обжект	= Результат.profile[Индех];
			
			Если Не (Обжект.fitst_name = "" И Обжект.second_name = "" И Обжект.last_name = "") Тогда
				
				Рез	= РезультатыПоиска.Добавить();
				
				Рез.Участник	= Обжект.last_name + " " + Обжект.fitst_name + " " + Обжект.second_name;
				
				Рез.ПрофильДата		= Формат(Результат.birthday, "ДФ='dd MMMM yyyy'");
				Рез.ПрофильМесто	= Результат.location;
				Рез.ПрофильПочта	= Результат.email;
				Рез.ПрофильТелефон	= Результат.phone;
				ДанныеКартинки	= Base64Значение(Результат.photo);
				Рез.ПрофильФото		= ПоместитьВоВременноеХранилище(ДанныеКартинки);
				
			КонецЕсли;
			
		КонецЦикла;
		
	Исключение
		
		Результат	= Неопределено;
		Сообщить("Нет участников по условиям поиска");
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	ПоискНаСервере();
КонецПроцедуры

